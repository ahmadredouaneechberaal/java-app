/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package  projet_youtube_produit;

//import BDD.Parameter;
import BDD.ResultSetTableModel;
import BDD.db_connection;
import java.sql.*;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author liamsi
 */
public class Commandes extends javax.swing.JFrame {

    
    ResultSet rs;
    db_connection db;
    Connection con;
    int old, dec, now;
    public Commandes() {
        //db = new db_connection(new Parameter().HOST_DB, new Parameter().USERNAME_DB, new Parameter().PASSWORD_DB, new Parameter().IPHOST, new Parameter().PORT);
        try {
            con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/gestion_produit");
        } catch (SQLException ex) {
            Logger.getLogger(Livreurs.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        table();
       // jam();
    }

    public void table() {
        //String colon[] = {"code_commande","Livreurs","Address","Nom_client","Prenom_client","Prix_livraison",};
        //rs = db.querySelect(colon, "commandes");
        PreparedStatement pstmt;
        try {
            pstmt = con.prepareStatement("select * from commandes", ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
            rs = pstmt.executeQuery();
        } catch (SQLException ex) {
            Logger.getLogger(Livreurs.class.getName()).log(Level.SEVERE, null, ex);
        }
        tbl_res.setModel(new ResultSetTableModel(rs));
    }
         void actualiser() {
        txtcod.setText("");
        txtliv.setText("");
        txtadd.setText("");
        txtnom.setText("");
        txtpre.setText("");
        txtprix.setText("");
         }
    /**
    public void importer() {
        String colon[] = {"num_facture","code_produit","reference","prix_vente","stock_sortie","subtotal"};
        rs = db.fcSelectCommand(colon, "vente", "num_facture='" + txtfac.getText() + "'");
        tbl_ven.setModel(new ResultSetTableModel(rs));
    }*/
    /**
     public void jam() {
        Date s = new Date();
        SimpleDateFormat tgl = new SimpleDateFormat("EEEE-dd-MMM-yyyy");
        SimpleDateFormat jam = new SimpleDateFormat("HH:mm");
        lbl1.setText(jam.format(s));
        lbl2.setText(tgl.format(s));} */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_res = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        comrech = new javax.swing.JComboBox();
        txtrech = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtcod = new javax.swing.JTextField();
        txtadd = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtpre = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        txtliv = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtnom = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtprix = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationByPlatform(true);
        setPreferredSize(new java.awt.Dimension(1050, 850));
        setSize(new java.awt.Dimension(850, 850));
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(248, 249, 250));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("resultat");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        jPanel1.add(jLabel1);
        jLabel1.setBounds(460, 10, 100, 23);

        tbl_res.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "code_commande", "Address", "Prenom_client", "Nom_client", "Livreur", "Nom_client", "Prix_livraison"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbl_res.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_resMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_res);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(0, 40, 990, 90);

        jButton7.setText("actualiser");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7);
        jButton7.setBounds(840, 0, 80, 20);

        jButton8.setText("sortire");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8);
        jButton8.setBounds(920, 0, 70, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 10, 990, 140);

        jPanel2.setBackground(new java.awt.Color(239, 252, 253));
        jPanel2.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel5.setText("recherche par cat√©gorie :");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(50, 0, 250, 20);

        comrech.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "code_Commande", "Livreur", "Address", "Nom_client", "Prenom_client"}));
        jPanel2.add(comrech);
        comrech.setBounds(50, 30, 240, 30);

        txtrech.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtrechActionPerformed(evt);
            }
        });
        jPanel2.add(txtrech);
        txtrech.setBounds(150, 70, 180, 30);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("code_Commande :");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(40, 160, 150, 17);

        txtcod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcodActionPerformed(evt);
            }
        });
        jPanel2.add(txtcod);
        txtcod.setBounds(200, 150, 160, 30);

        txtadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtaddActionPerformed(evt);
            }
        });
        jPanel2.add(txtadd);
        txtadd.setBounds(200, 260, 160, 30);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Address :");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(70, 270, 100, 17);

        txtpre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpreActionPerformed(evt);
            }
        });
        jPanel2.add(txtpre);
        txtpre.setBounds(200, 380, 160, 30);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText("Prenom_client  :");
        jPanel2.add(jLabel9);
        jLabel9.setBounds(50, 390, 100, 17);

        jButton5.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jButton5.setText("recherche ");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5);
        jButton5.setBounds(10, 70, 128, 30);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(10, 150, 360, 550);

        jPanel3.setBackground(new java.awt.Color(240, 249, 252));
        jPanel3.setLayout(null);

        jButton2.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton2.setText("Ajouter au Commandes");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);
        jButton2.setBounds(20, 500, 260, 40);

        txtliv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtlivActionPerformed(evt);
            }
        });
        jPanel3.add(txtliv);
        txtliv.setBounds(270, 150, 160, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Livreur     :");
        jPanel3.add(jLabel3);
        jLabel3.setBounds(130, 160, 100, 17);

        txtnom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnomActionPerformed(evt);
            }
        });
        jPanel3.add(txtnom);
        txtnom.setBounds(270, 260, 160, 30);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("Nom_client     :");
        jPanel3.add(jLabel8);
        jLabel8.setBounds(130, 270, 100, 17);

        txtprix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtprixActionPerformed(evt);
            }
        });
        jPanel3.add(txtprix);
        txtprix.setBounds(270, 380, 160, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Prix_Livraison        :");
        jPanel3.add(jLabel4);
        jLabel4.setBounds(130, 390, 120, 17);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(360, 150, 630, 550);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbl_resMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_resMouseClicked
        txtcod.setText(String.valueOf(tbl_res.getValueAt(tbl_res.getSelectedRow(), 0)));
        txtliv.setText(String.valueOf(tbl_res.getValueAt(tbl_res.getSelectedRow(), 1)));
        txtadd.setText(String.valueOf(tbl_res.getValueAt(tbl_res.getSelectedRow(), 3)));
        txtnom.setText(String.valueOf(tbl_res.getValueAt(tbl_res.getSelectedRow(), 4)));
        txtprix.setText(String.valueOf(tbl_res.getValueAt(tbl_res.getSelectedRow(), 5)));
        txtpre.setText(String.valueOf(tbl_res.getValueAt(tbl_res.getSelectedRow(), 6)));
       //cout();
    }//GEN-LAST:event_tbl_resMouseClicked

    private void txtcodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodActionPerformed

    private void txtlivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtlivActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtlivActionPerformed

    private void txtaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtaddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtaddActionPerformed

    private void txtpreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpreActionPerformed

    private void txtprixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtprixActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtprixActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (txtrech.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "SVP complete le champ de recherche");
        } else {
            if (comrech.getSelectedItem().equals("code_Commande")) {
                //String colon[] = {"code_commande","Livreurs","Address","Nom_client","Prenom_client","Prix_livraison",};
                //rs = db.fcSelectCommand(colon, "commandes", "code_commande LIKE '" + txtrech.getText() + "' ");
                PreparedStatement pstmt;
                try {
                pstmt = con.prepareStatement("select * from commandes where code_commande='"+txtrech.getText()+"'", ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                rs = pstmt.executeQuery();
                }catch (SQLException ex) {
                Logger.getLogger(Livreurs.class.getName()).log(Level.SEVERE, null, ex);
                }

                tbl_res.setModel(new ResultSetTableModel(rs));
            } else if (comrech.getSelectedItem().equals("Livreurs")) {
                //String colon[] = {"code_commande","Livreurs","Address","Nom_client","Prenom_client","Prix_livraison",};
                //rs = db.fcSelectCommand(colon, "commandes", "Livreurs LIKE '" + txtrech.getText() + "' ");
                PreparedStatement pstmt;
                try {
                pstmt = con.prepareStatement("select * from commandes where Livreurs='"+txtrech.getText()+"'", ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                rs = pstmt.executeQuery();
                }catch (SQLException ex) {
                Logger.getLogger(Livreurs.class.getName()).log(Level.SEVERE, null, ex);
                }
                tbl_res.setModel(new ResultSetTableModel(rs));
            } else if (comrech.getSelectedItem().equals("Address")) {
                //String colon[] ={"code_commande","Livreurs","Address","Nom_client","Prenom_client","Prix_livraison",};
                //rs = db.fcSelectCommand(colon, "commandes", "Address LIKE '" + txtrech.getText() + "' ");
                PreparedStatement pstmt;
                try {
                pstmt = con.prepareStatement("select * from commandes where Address='"+txtrech.getText()+"'", ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                rs = pstmt.executeQuery();
                }catch (SQLException ex) {
                Logger.getLogger(Livreurs.class.getName()).log(Level.SEVERE, null, ex);
                }
                tbl_res.setModel(new ResultSetTableModel(rs));
                } else if (comrech.getSelectedItem().equals("Nom_client")) {
                //String colon[] ={"code_commande","Livreurs","Address","Nom_client","Prenom_client","Prix_livraison",};
                //rs = db.fcSelectCommand(colon, "commandes", "Nom_client LIKE '" + txtrech.getText() + "' ");
                PreparedStatement pstmt;
                try {
                pstmt = con.prepareStatement("select * from commandes where Nom_client='"+txtrech.getText()+"'", ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                rs = pstmt.executeQuery();
                }catch (SQLException ex) {
                Logger.getLogger(Livreurs.class.getName()).log(Level.SEVERE, null, ex);
                }
                tbl_res.setModel(new ResultSetTableModel(rs));
            } else if (comrech.getSelectedItem().equals("Prenom_client")) {
                //String colon[] = {"code_commande","Livreurs","Address","Nom_client","Prenom_client","Prix_livraison",};
                //rs = db.fcSelectCommand(colon, "commandes", "Prenom_client LIKE '" + txtrech.getText() + "' ");
                PreparedStatement pstmt;
                try {
                pstmt = con.prepareStatement("select * from commandes where Prenom_client='"+txtrech.getText()+"'", ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                rs = pstmt.executeQuery();
                }catch (SQLException ex) {
                Logger.getLogger(Livreurs.class.getName()).log(Level.SEVERE, null, ex);
                }
                tbl_res.setModel(new ResultSetTableModel(rs));
                } else if (comrech.getSelectedItem().equals("Prix_livraison")) {
                //String colon[] ={"code_commande","Livreurs","Address","Nom_client","Prenom_client","Prix_livraison",};
                //rs = db.fcSelectCommand(colon, "commandes", "Prix_livraison LIKE '" + txtrech.getText() + "' ");
                PreparedStatement pstmt;
                try {
                pstmt = con.prepareStatement("select * from commandes where Prix_livraison='"+txtrech.getText()+"'", ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_UPDATABLE);
                rs = pstmt.executeQuery();
                }catch (SQLException ex) {
                Logger.getLogger(Livreurs.class.getName()).log(Level.SEVERE, null, ex);
                }
                tbl_res.setModel(new ResultSetTableModel(rs));
                /**
            } else if (comrech.getSelectedItem().equals("prix")) {
                String colon[] = {"code_commande","Livreurs","Address","Nom_client","Prenom_client","Prix_livraison",};
                rs = db.fcSelectCommand(colon, "commandes", "prix LIKE '" + txtrech.getText() + "' ");
                tbl_res.setModel(new ResultSetTableModel(rs));
                } else if (comrech.getSelectedItem().equals("stock")) {
                String colon[] ={"code_commande","Livreurs","Address","Nom_client","Prenom_client","Prix_livraison",};
                rs = db.fcSelectCommand(colon, "commandes", "stock LIKE '" + txtrech.getText() + "' ");
                tbl_res.setModel(new ResultSetTableModel(rs));
                */
            
            
            
                
            
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (txtcod.getText().equals("") || txtliv.getText().equals("") || txtadd.getText().equals("")
                || txtnom.getText().equals("") || txtprix.getText().equals("") || txtpre.getText().equals("") ) {
            JOptionPane.showMessageDialog(this, "SVP entrer vos donne√©");
        }  else {
            //String[] colon = {"code_commande","Address", "Prenom_client", "Nom_client", "Livreur", "Prix_livraison"};
            //String[] isi = {txtfac.getText(), txtcod.getText(), txtliv.getText(), txtnou.getText(), txtsto.getText(), lbltot1.getText()};
            String query = "insert into commandes (code_commande,Livreurs,Address,Nom_client,Prenom_client,Prix_livraison) values ('"+txtcod.getText()+"','"+txtliv.getText()+"','"+txtadd.getText()+"','"+txtnom.getText()+"','"+txtpre.getText()+"','"+txtprix.getText()+"')";
            try{
            PreparedStatement stmt = con.prepareStatement(query);
            stmt.execute();
            }catch (SQLException ex) {
            System.out.println(query);
            Logger.getLogger(Livreurs.class.getName()).log(Level.SEVERE, null, ex);
        }
            table();
            actualiser();

    }//GEN-LAST:event_jButton2ActionPerformed
    }
        
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
     table();   // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
 Login l = new Login();
        l.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void txtnomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnomActionPerformed

    private void txtrechActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtrechActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtrechActionPerformed

    /**
     * @param args the command line arguments
     */
 /**   
    public void cout() {
        double a = Double.parseDouble(txtpri.getText());
        double b = Double.parseDouble(txtrem.getText());
        double c = a - a * (b / 100);
        txtnou.setText(String.valueOf(c));
    }
     public void subtotal() {
        double a = Double.parseDouble(txtnou.getText());
        double b = Double.parseDouble(txtsto.getText());
        double c = a * b;
        lbltot1.setText(String.valueOf(c));}
     
      public void total() {
        rs = db.ex√©cutionQuery("SELECT SUM(subtotal) as subtotal FROM vente WHERE num_facture = '" + txtfac.getText() + "'");
        try {
            rs.next();
            lbltot2.setText(rs.getString("subtotal"));
        } catch (SQLException ex) {
            Logger.getLogger(Commandes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
       public boolean test_stock() throws SQLException {
        boolean teststock;
        rs = db.querySelectAll("produit","code_produit='" + txtcod.getText() + "'");
        while (rs.next()) {
            old = rs.getInt("stock");
        }
        dec = Integer.parseInt(txtsto.getText());
        if (old < dec) {
            teststock = false;
        } else {
            teststock = true;
        }
        return teststock;
    }

    public void def() throws SQLException {
        rs = db.querySelectAll("produit", "code_produit='" + txtcod.getText() + "'");
        while (rs.next()) {
            old = rs.getInt("stock");
        }
        dec = Integer.parseInt(txtsto.getText());
        now = old - dec;
         String nvstock = Integer.toString(now);

        String a = String.valueOf(nvstock);
        String[] colon = {"stock"};
        String[] isi = {a};
        System.out.println(db.queryUpdate("produit", colon, isi, "code_produit='" + txtcod.getText() + "'"));
    }

    public void payapr√©s() {
        int a = Integer.parseInt(lbltot2.getText());
        int b = Integer.parseInt(txtcas.getText());
        int c = b - a;
        txtpay.setText(Integer.toString(c));
    }
    */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Commandes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Commandes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Commandes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Commandes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Commandes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JComboBox comrech;
    public static javax.swing.JButton jButton2;
    public static javax.swing.JButton jButton5;
    public static javax.swing.JButton jButton7;
    public static javax.swing.JButton jButton8;
    public static javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel jLabel2;
    public static javax.swing.JLabel jLabel3;
    public static javax.swing.JLabel jLabel4;
    public static javax.swing.JLabel jLabel5;
    public static javax.swing.JLabel jLabel6;
    public static javax.swing.JLabel jLabel8;
    public static javax.swing.JLabel jLabel9;
    public static javax.swing.JPanel jPanel1;
    public static javax.swing.JPanel jPanel2;
    public static javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tbl_res;
    public static javax.swing.JTextField txtadd;
    public static javax.swing.JTextField txtcod;
    public static javax.swing.JTextField txtliv;
    public static javax.swing.JTextField txtnom;
    public static javax.swing.JTextField txtpre;
    public static javax.swing.JTextField txtprix;
    public static javax.swing.JTextField txtrech;
    // End of variables declaration//GEN-END:variables
}
